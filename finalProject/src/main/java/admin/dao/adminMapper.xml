<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminSQL">

	<select id="getMemberList" parameterType="java.util.Map" resultType="member.bean.MemberDTO">
		select * from(select rownum rn, tt.* from(
		select * from members)tt)
		where rn between #{startNum} and #{endNum}
	</select>
<!-- 총글수 -->
	<select id="getTotalA" resultType="Integer">
		select count(*) from members
	</select>
<!-- 회원조건검색 -->
	<select id="getSearchMember" parameterType="java.util.Map" resultType="member.bean.MemberDTO">
		<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select * from members where ${searchType} like '%'||#{keyword}||'%')tt
		)where rn>=#{startNum} and rn<=#{endNum}
		]]>
	</select>
<!-- 검색한 후 총글수 -->
	<select id="getTotalB" resultType="Integer">
		select count(*) from members where ${searchType} like '%'||#{keyword}||'%'
	</select>
<!-- 상세보기 -->	
	<select id="getMemberView" parameterType="String" resultType="admin.bean.AdminMembersDTO">
		select * from members join store using(mem_id) where mem_id = #{id}
	</select>
<!-- 판매중인물건 총개수 -->
	<select id="totalSellProduct" parameterType="String" resultType="Integer"> 
		select count(*) from members join product using(mem_id) where mem_id = #{id}
	</select>


<!-- 상점리스트출력 -->
	<select id="getStoreList" parameterType="java.util.Map" resultType="store.bean.StoreDTO">
		select * from(select rownum rn, tt.* from(
		select * from store)
		tt)where rn between #{startNum} and #{endNum}
	</select>
<!-- 상점리스트 총개수 -->
	<select id="getTotalC" resultType="Integer">
		select count(*) from store join members using(mem_id)
	</select>
<!-- 상점 상세보기 -->	
	<select id="getStoreView" parameterType="String" resultType="admin.bean.AdminMembersDTO">
		select * from store join members using(mem_id) where mem_id = #{id}
	</select>
<!-- 상점조건검색 -->
	<select id="getSearchStoreList" parameterType="java.util.Map" resultType="store.bean.StoreDTO">
		<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select * from store where ${searchType} like '%'||#{storeKeyword}||'%')tt
		)where rn>=#{startNum} and rn<=#{endNum}
		]]>
	</select>
<!-- 상점 조건검색 후 총개수 -->
	<select id="getTotalD" parameterType="java.util.Map" resultType="Integer">
		select count(*) from store where ${searchType} like '%'||#{storeKeyword}||'%'
	</select>
	
<!-- 상점상세보기_물건출력 -->	
	<select id="getStore_ProductList" parameterType="String" resultType="product.bean.ProductDTO">
		select * from product where mem_id = #{id} order by product_seq desc
	</select>
<!-- 상점목록_물품리스트에서 삭제 -->
	<delete id="store_productDelete" parameterType="java.util.Map">
		delete product where product_seq in
		<foreach collection="array" item="data" index="i" open="(" close=")" separator=",">
			<!-- ${array[i]} -->
			#{data}
		</foreach>
	</delete>
	
<!-- 물품전체 출력 --> 
	<select id="getProductAllList" parameterType="java.util.Map" resultType="product.bean.ProductDTO">
		select * from(select rownum rn, tt.* from(
					select * from product)tt)
					where rn between #{startNum} and #{endNum}
	</select>
<!-- 전체상품수 -->
	<select id="getTotalE" resultType="Integer">
		select count(*) from product
	</select>
<!-- 물품관련 상세정보 -->
	<select id="getProductView" parameterType="String" resultType="admin.bean.AdminMembersDTO">
		select * from product join members using(mem_id) where product_seq = #{seq}
	</select>
<!-- 물품 조건검색 -->
	<select id="getSearchProductList" parameterType="java.util.Map" resultType="product.bean.ProductDTO">
		<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select * from product where ${searchType} like '%'||#{productKeyword}||'%')tt
		)where rn>=#{startNum} and rn<=#{endNum}
		]]>
	</select>
<!-- 물품 조건검색_페이징 -->
	<select id="getTotalF" parameterType="java.util.Map" resultType="Integer">
		select count(*) from product where ${searchType} like '%'||#{productKeyword}||'%'
	</select>
<!-- 총 리뷰 개수 -->
 	<select id="storeReviewTotalA" parameterType="String" resultType="int">
   		select count(*)
		from product
        join review using(product_seq)
        where product.mem_id = #{id}
   	</select>
   	
	<select id="getStoreViewOrderby" parameterType="java.util.Map" resultType="product.bean.ProductDTO">
		select * from product where mem_id=#{id}
			<choose>
				<when test="product_manage == 0"><!-- 전체 -->
					order by product_seq desc
				</when>
				<when test="product_manage != 0"><!-- 판매중 -->
					and product_manage=#{product_manage} order by product_seq desc
				</when>
			</choose>
	</select>
	
	<!-- A.신고 리스트 전체 출력 -->
   <select id="getComplainList" parameterType="java.util.Map" resultType="member.bean.ComplainDTO">
      select * from(
         select rownum rn, tt.* from(select * from complain)tt)
               where rn between #{startNum} and #{endNum} order by complain_seq asc
   </select>

<!-- A.신고 리스트 개수 -->
   <select id="getComplainTotal" resultType="Integer">
      select count(*) from complain
   </select>
   
<!-- B.신고 검색 리스트 전체 출력 -->
   <select id="searchReportedMember" parameterType="java.util.Map" resultType="member.bean.ComplainDTO">
      <![CDATA[
      select * from
         (select rownum rn, tt.* from
         (select * from complain where ${searchType} like '%'||#{keyword}||'%')tt
         )where rn>=#{startNum} and rn<=#{endNum}
      ]]>
   </select>
<!-- B.신고 검색 리스트 개수 -->
   <select id="getTotalReportedMember" parameterType="java.util.Map" resultType="Integer">
      select count(*) from complain where ${searchType} like '%'||#{keyword}||'%'
   </select>
   
<!-- 신고 댓글 보이기 -->
   <select id="getCommentContent" parameterType="String" resultType="board.bean.CommentDTO">
      select mem_id, comment_content, comment_logtime from comments where comment_seq=#{comment_seq} 
   </select>
<!-- 신고 리뷰 보이기 -->
   <select id="getReviewContent" parameterType="String" resultType="store.bean.ReviewDTO">
      select mem_id, review_content, review_date from comments where review_seq=#{review_seq}
   </select>
   

</mapper>